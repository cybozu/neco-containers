kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: local-storage
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
reclaimPolicy: Retain
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: local-pv-provisioner
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: local-pv-provisioner
rules:
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - persistentvolumes
    verbs:
      - create
      - get
      - list
      - patch
      - update
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: local-pv-provisioner
subjects:
  - kind: ServiceAccount
    name: local-pv-provisioner
    namespace: default
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: local-pv-provisioner
  labels:
    app.kubernetes.io/name: local-pv-provisioner
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: local-pv-provisioner
  template:
    metadata:
      labels:
        app.kubernetes.io/name: local-pv-provisioner
    spec:
      containers:
        - name: local-pv-provisioner
          image: quay.io/cybozu/local-pv-provisioner:0.1.0
          imagePullPolicy: Never
          args:
            - --device-dir=/dev/crypt-disk/by-path
            - --polling-interval=10s
          env:
            - name: LP_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          volumeMounts:
            - name: dev
              mountPath: /dev
          securityContext:
            runAsUser: 0
            runAsGroup: 0
            privileged: true
      serviceAccountName: local-pv-provisioner
      volumes:
        - name: dev
          hostPath:
            path: /dev
