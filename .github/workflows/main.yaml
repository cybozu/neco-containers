name: main
on:
  pull_request:
  push:
    branches:
      - "main"
      - "ceph-v*"
jobs:
  prepare_matrix:
    runs-on: ubuntu-22.04
    outputs:
      jobs: ${{ steps.prepare-matrix.outputs.jobs }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/prepare_matrix
        id: prepare-matrix
        with:
          matrix: |
            - dir: "./admission"
              container-image: "neco-admission"
              make-targets: "check-generate test"
            - dir: "./alertmanager"
              container-image: "alertmanager"
            - dir: "./argocd"
              container-image: "argocd"
            - dir: "./argocd-image-updater"
              container-image: "argocd-image-updater"
            - dir: "./bird"
              container-image: "bird"
            - dir: "./blackbox_exporter"
              container-image: "blackbox_exporter"
            - dir: "./bmc-reverse-proxy"
              container-image: "bmc-reverse-proxy"
              make-targets: "setup check-generate test"
            - dir: "./bmc-log-collector"
              container-image: "bmc-log-collector"
              make-targets: "setup check-generate test"
            - dir: "./bpf-map-pressure-exporter"
              container-image: "bpf-map-pressure-exporter"
              make-targets: "check-generate test"
            - dir: "./bpftrace"
              container-image: "bpftrace"
              make-targets: "checkout"
              make-post-targets: "test"
            - dir: "./cadvisor"
              container-image: "cadvisor"
            - dir: "./cephcsi"
              container-image: "cephcsi"
              request-scan: "false"
            - dir: "./cep-checker"
              container-image: "cep-checker"
              make-targets: "test"
            - dir: "./ceph-extra-exporter"
              container-image: "ceph-extra-exporter"
              make-targets: "check-generate test"
            - dir: "./cert-manager"
              container-image: "cert-manager"
            - dir: "./chrony"
              container-image: "chrony"
            - dir: "./cilium-certgen"
              container-image: "cilium-certgen"
              request-scan: "false"
            - dir: "./cilium-operator-generic"
              container-image: "cilium-operator-generic"
              request-scan: "false"
            - dir: "./configmap-reload"
              container-image: "configmap-reload"
            - dir: "./contour"
              container-image: "contour"
            - dir: "./coredns"
              container-image: "coredns"
            - dir: "csi-addons-controller"
              container-image: "csi-addons-controller"
            - dir: "csi-addons-sidecar"
              container-image: "csi-addons-sidecar"
            - dir: "csi-attacher"
              container-image: "csi-attacher"
            - dir: "csi-node-driver-registrar"
              container-image: "csi-node-driver-registrar"
            - dir: "csi-provisioner"
              container-image: "csi-provisioner"
            - dir: "csi-resizer"
              container-image: "csi-resizer"
            - dir: "csi-snapshotter"
              container-image: "csi-snapshotter"
            - dir: "./dex"
              container-image: "dex"
            - dir: "./etcd"
              container-image: "etcd"
            - dir: "./external-dns"
              container-image: "external-dns"
            - dir: "./fluent-bit"
              container-image: "fluent-bit"
            - dir: "./golang-all/golang-1.22-jammy"
              container-image: "golang"
              platforms: "linux/amd64,linux/arm64"
              load: "false"
              request-scan: "true"
            - dir: "./golang-all/golang-1.23-jammy"
              container-image: "golang"
              platforms: "linux/amd64,linux/arm64"
              load: "false"
              request-scan: "true"
            - dir: "./golang-all/golang-1.24-jammy"
              container-image: "golang"
              platforms: "linux/amd64,linux/arm64"
              load: "false"
              request-scan: "true"
            - dir: "./golang-all/golang-1.22-noble"
              container-image: "golang"
              platforms: "linux/amd64,linux/arm64"
              load: "false"
              request-scan: "true"
            - dir: "./golang-all/golang-1.23-noble"
              container-image: "golang"
              platforms: "linux/amd64,linux/arm64"
              load: "false"
              request-scan: "true"
            - dir: "./golang-all/golang-1.24-noble"
              container-image: "golang"
              platforms: "linux/amd64,linux/arm64"
              load: "false"
              request-scan: "true"
            - dir: "./grafana"
              container-image: "grafana"
            - dir: "./grafana-operator"
              container-image: "grafana-operator"
            - dir: "./haproxy"
              container-image: "haproxy"
            - dir: "./heartbeat"
              container-image: "heartbeat"
              make-targets: "setup check-generate test"
            - dir: "./kube-metrics-adapter"
              container-image: "kube-metrics-adapter"
            - dir: "./kube-state-metrics"
              container-image: "kube-state-metrics"
            - dir: "./kube-storage-version-migrator"
              container-image: "storage-version-migration-initializer"
              target: "initializer"
            - dir: "./kube-storage-version-migrator"
              container-image: "storage-version-migration-migrator"
              target: "migrator"
            - dir: "./kube-storage-version-migrator"
              container-image: "storage-version-migration-trigger"
              target: "trigger"
            - dir: "./kubernetes"
              container-image: "kubernetes"
            - dir: "./local-pv-provisioner"
              container-image: "local-pv-provisioner"
              make-targets: "check-generate test ci-e2e-test"
            - dir: "./loki"
              container-image: "loki"
            - dir: "./machines-endpoints"
              container-image: "machines-endpoints"
              make-targets: "setup check-generate test"
            - dir: "./memcached"
              container-image: "memcached"
            - dir: "./memcached-exporter"
              container-image: "memcached-exporter"
            - dir: "./meows-dctest-runner"
              container-image: "meows-dctest-runner"
              request-scan: "true"
            - dir: "./meows-neco-runner"
              container-image: "meows-neco-runner"
              request-scan: "true"
            - dir: "./moco-switchover-downtime-monitor"
              container-image: "moco-switchover-downtime-monitor"
            - dir: "./opentelemetry-collector"
              container-image: "opentelemetry-collector"
            - dir: "./hubble"
              container-image: "hubble"
            - dir: "./hubble-relay"
              container-image: "hubble-relay"
              make-post-targets: "cilium-checkout cilium-test-e2e-setup cilium-test-e2e-upgrade-inotify test-e2e"
              request-scan: "false"
            - dir: "./hubble-ui"
              container-image: "hubble-ui-frontend"
              request-scan: "true"
              target: "frontend"
            - dir: "./hubble-ui"
              container-image: "hubble-ui-backend"
              request-scan: "true"
              target: "backend"
            - dir: "./pause"
              container-image: "pause"
            - dir: "./pod-delete-rate-limiter"
              container-image: "pod-delete-rate-limiter"
              make-targets: "test"
            - dir: "./pomerium"
              container-image: "pomerium"
            - dir: "./prometheus-adapter"
              container-image: "prometheus-adapter"
            - dir: "./prometheus-config-reloader"
              container-image: "prometheus-config-reloader"
            - dir: "./promtail"
              container-image: "promtail"
            - dir: "./promtail-debug"
              container-image: "promtail-debug"
            - dir: "./pushgateway"
              container-image: "pushgateway"
            - dir: "./redis"
              container-image: "redis"
            - dir: "./registry"
              container-image: "registry"
            - dir: "./rook"
              container-image: "rook"
            - dir: "./sealed-secrets"
              container-image: "sealed-secrets"
            - dir: "./s3gw"
              container-image: "s3gw"
              make-targets: "setup check-generate test"
            - dir: "./serf"
              container-image: "serf"
            - dir: "./stakater-reloader"
              container-image: "stakater-reloader"
            - dir: "./spegel"
              container-image: "spegel"
            - dir: "./squid"
              container-image: "squid"
            - dir: "./squid-exporter"
              container-image: "squid-exporter"
              make-targets: "test"
            - dir: "./tcp-keepalive"
              container-image: "tcp-keepalive"
              make-targets: "check-diff test"
            - dir: "./teleport-node"
              container-image: "teleport-node"
            - dir: "./tempo"
              container-image: "tempo"
            - dir: "./testhttpd"
              container-image: "testhttpd"
              make-targets: "setup check-generate test"
            - dir: "./trust-manager"
              container-image: "trust-manager"
            - dir: "./trust-packages"
              container-image: "trust-packages"
              make-targets: "download-certificates"
            - dir: "./unbound"
              container-image: "unbound"
              make-targets: "check-generate"
              make-post-targets: "validate"
            - dir: "./unbound_exporter"
              container-image: "unbound_exporter"
            - dir: "./vault"
              container-image: "vault"
            - dir: "./victoriametrics"
              container-image: "victoriametrics-vmagent"
              target: "vmagent"
            - dir: "./victoriametrics"
              container-image: "victoriametrics-vmalert"
              target: "vmalert"
            - dir: "./victoriametrics"
              container-image: "victoriametrics-vmbackup"
              target: "vmbackup"
            - dir: "./victoriametrics"
              container-image: "victoriametrics-vmctl"
              target: "vmctl"
            - dir: "./victoriametrics"
              container-image: "victoriametrics-vminsert"
              target: "vminsert"
            - dir: "./victoriametrics"
              container-image: "victoriametrics-vmrestore"
              target: "vmrestore"
            - dir: "./victoriametrics"
              container-image: "victoriametrics-vmselect"
              target: "vmselect"
            - dir: "./victoriametrics"
              container-image: "victoriametrics-vmsingle"
              target: "vmsingle"
            - dir: "./victoriametrics"
              container-image: "victoriametrics-vmstorage"
              target: "vmstorage"
            - dir: "./victoriametrics-operator"
              container-image: "victoriametrics-operator"
              target: "operator"
            - dir: "./victoriametrics-operator"
              container-image: "victoriametrics-config-reloader"
              target: "config-reloader"
  build_container:
    needs: prepare_matrix
    strategy:
      matrix:
        job: ${{ fromJson(needs.prepare_matrix.outputs.jobs) }}
    runs-on: ubuntu-22.04
    env:
      go-version: "1.23.3"
    steps:
      - uses: actions/checkout@v4
      - name: Setup build environment
        uses: ./.github/actions/setup
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          go-version: ${{ env.go-version }}
      - name: Build container image
        uses: ./.github/actions/build_push
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          yamory_token: ${{ secrets.YAMORY_ACCESS_TOKEN }}
          dir: ${{ matrix.job.dir }}
          container-image: ${{ matrix.job.container-image }}
          platforms: ${{ matrix.job.platforms }}
          load: ${{ matrix.job.load }}
          make-targets: ${{ matrix.job.make-targets }}
          make-post-targets: ${{ matrix.job.make-post-targets }}
          request-scan: ${{ matrix.job.request-scan }}
          target: ${{ matrix.job.target }}

  build_envoy:
    runs-on: neco-containers-ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Build container image
        uses: ./.github/actions/build_envoy
        with:
          clang_archive_path: https://github.com/llvm/llvm-project/releases/download/llvmorg-14.0.0/clang+llvm-14.0.0-x86_64-linux-gnu-ubuntu-18.04.tar.xz
          github_token: ${{ secrets.GITHUB_TOKEN }}
          yamory_token: ${{ secrets.YAMORY_ACCESS_TOKEN }}

  build_ceph:
    runs-on: neco-containers-ubuntu-22.04
    steps:
    - uses: actions/checkout@v4
    - name: Build ceph image
      uses: ./.github/actions/build_ceph
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        version: 19.2.1

  build_cilium:
    runs-on: neco-containers-ubuntu-22.04
    env:
      go-version: "1.23.3"
    steps:
      - uses: actions/checkout@v4
      - name: Setup build environment
        uses: ./.github/actions/setup
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          go-version: ${{ env.go-version }}
      - name: Build container image
        uses: ./.github/actions/build_push
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          yamory_token: ${{ secrets.YAMORY_ACCESS_TOKEN }}
          dir: cilium
          container-image: cilium
          make-targets: "checkout status test-e2e-setup test-e2e-upgrade-inotify"
          make-post-targets: "test test-e2e"
          request-scan: "true"
