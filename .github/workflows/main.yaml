name: main
on:
  pull_request:
  push:
    branches:
      - "main"
jobs:
  build_container:
    strategy:
      matrix:
        job:
          - dir: "./alertmanager"
            container-image: "alertmanager"
          - dir: "./argocd"
            container-image: "argocd"
          - dir: "./argocd-image-updater"
            container-image: "argocd-image-updater"
          - dir: "./bird"
            container-image: "bird"
          - dir: "./blackbox_exporter"
            container-image: "blackbox_exporter"
          - dir: "./bmc-reverse-proxy"
            container-image: "bmc-reverse-proxy"
          - dir: "./bpf-map-pressure-exporter"
            container-image: "bpf-map-pressure-exporter"
            make_test: true
          - dir: "./cadvisor"
            container-image: "cadvisor"
          - dir: "./cert-manager"
            container-image: "cert-manager"
          - dir: "./chrony"
            container-image: "chrony"
          - dir: "./cilium-certgen"
            container-image: "cilium-certgen"
            scan: "false"
          - dir: "./cilium-operator-generic"
            container-image: "cilium-operator-generic"
            scan: "false"
          - dir: "./configmap-reload"
            container-image: "configmap-reload"
          - dir: "./contour"
            container-image: "contour"
          - dir: "./coredns"
            container-image: "coredns"
          - dir: "./dex"
            container-image: "dex"
          - dir: "./etcd"
            container-image: "etcd"
          - dir: "./external-dns"
            container-image: "external-dns"
          - dir: "./fluent-bit"
            container-image: "fluent-bit"
          - dir: "./golang-all/golang-1.20-focal"
            container-image: "golang"
            enable_arm64: true
            scan: "true"
          - dir: "./golang-all/golang-1.20-jammy"
            container-image: "golang"
            enable_arm64: true
            scan: "true"
          - dir: "./golang-all/golang-1.21-focal"
            container-image: "golang"
            enable_arm64: true
            scan: "true"
          - dir: "./golang-all/golang-1.21-jammy"
            container-image: "golang"
            enable_arm64: true
            scan: "true"
          - dir: "./grafana-operator"
            container-image: "grafana-operator"
          - dir: "./haproxy"
            container-image: "haproxy"
          - dir: "./kube-metrics-adapter"
            container-image: "kube-metrics-adapter"
          - dir: "./kube-state-metrics"
            container-image: "kube-state-metrics"
          - dir: "./kubernetes"
            container-image: "kubernetes"
          - dir: "./loki"
            container-image: "loki"
          - dir: "./machines-endpoints"
            container-image: "machines-endpoints"
          - dir: "./memcached"
            container-image: "memcached"
          - dir: "./memcached-exporter"
            container-image: "memcached-exporter"
          - dir: "./moco-switchover-downtime-monitor"
            container-image: "moco-switchover-downtime-monitor"
          - dir: "./opentelemetry-collector"
            container-image: "opentelemetry-collector"
          - dir: "./hubble"
            container-image: "hubble"
          - dir: "./hubble-relay"
            container-image: "hubble-relay"
            scan: "false"
          - dir: "./hubble-ui"
            container-image: "hubble-ui-frontend"
            scan: "false"
            target: "frontend"
          - dir: "./hubble-ui"
            container-image: "hubble-ui-backend"
            scan: "false"
            target: "backend"
          - dir: "./pause"
            container-image: "pause"
          - dir: "./pod-delete-rate-limiter"
            container-image: "pod-delete-rate-limiter"
            make_test: true
          - dir: "./pomerium"
            container-image: "pomerium"
          - dir: "./prometheus-adapter"
            container-image: "prometheus-adapter"
          - dir: "./prometheus-config-reloader"
            container-image: "prometheus-config-reloader"
          - dir: "./promtail"
            container-image: "promtail"
          - dir: "./pushgateway"
            container-image: "pushgateway"
          - dir: "./redis"
            container-image: "redis"
          - dir: "./registry"
            container-image: "registry"
          - dir: "./sealed-secrets"
            container-image: "sealed-secrets"
          - dir: "./s3gw"
            container-image: "s3gw"
          - dir: "./serf"
            container-image: "serf"
          - dir: "./stakater-reloader"
            container-image: "stakater-reloader"
          - dir: "./spegel"
            container-image: "spegel"
          - dir: "./squid"
            container-image: "squid"
          - dir: "./squid-exporter"
            container-image: "squid-exporter"
            make_test: true
          - dir: "./teleport-node"
            container-image: "teleport-node"
          - dir: "./tempo"
            container-image: "tempo"
          - dir: "./testhttpd"
            container-image: "testhttpd"
          - dir: "./trust-manager"
            container-image: "trust-manager"
          - dir: "./trust-packages"
            container-image: "trust-packages"
          - dir: "./unbound"
            container-image: "unbound"
          - dir: "./unbound_exporter"
            container-image: "unbound_exporter"
          - dir: "./vault"
            container-image: "vault"
          - dir: "./victoriametrics"
            container-image: "victoriametrics-vmagent"
            target: "vmagent"
          - dir: "./victoriametrics"
            container-image: "victoriametrics-vmalert"
            target: "vmalert"
          - dir: "./victoriametrics"
            container-image: "victoriametrics-vmbackup"
            target: "vmbackup"
          - dir: "./victoriametrics"
            container-image: "victoriametrics-vmctl"
            target: "vmctl"
          - dir: "./victoriametrics"
            container-image: "victoriametrics-vminsert"
            target: "vminsert"
          - dir: "./victoriametrics"
            container-image: "victoriametrics-vmrestore"
            target: "vmrestore"
          - dir: "./victoriametrics"
            container-image: "victoriametrics-vmselect"
            target: "vmselect"
          - dir: "./victoriametrics"
            container-image: "victoriametrics-vmsingle"
            target: "vmsingle"
          - dir: "./victoriametrics"
            container-image: "victoriametrics-vmstorage"
            target: "vmstorage"
          - dir: "./victoriametrics-operator"
            container-image: "victoriametrics-operator"

    runs-on: ubuntu-22.04
    env:
      go-version: "1.21"
    steps:
      - uses: actions/checkout@v4
      - name: Setup build environment
        uses: ./.github/actions/setup
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          go-version: ${{ env.go-version }}
      - name: Build container image
        uses: ./.github/actions/build_push
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          yamory_token: ${{ secrets.YAMORY_ACCESS_TOKEN }}
          dir: ${{ matrix.job.dir }}
          container-image: ${{ matrix.job.container-image }}
          enable_arm64: ${{ matrix.job.enable_arm64 }}
          make_test: ${{ matrix.job.make_test }}
          scan: ${{ matrix.job.scan }}
          target: ${{ matrix.job.target }}

  build_admission:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Build container image
        uses: ./.github/actions/build_admission
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

  build_envoy:
    runs-on: neco-containers-ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - name: Build container image
        uses: ./.github/actions/build_envoy
        with:
          version: 1.28.0
          clang_archive_path: https://github.com/llvm/llvm-project/releases/download/llvmorg-14.0.0/clang+llvm-14.0.0-x86_64-linux-gnu-ubuntu-18.04.tar.xz
          github_token: ${{ secrets.GITHUB_TOKEN }}
          yamory_token: ${{ secrets.YAMORY_ACCESS_TOKEN }}
