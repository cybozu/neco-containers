name: main
on:
  pull_request:
  push:
    branches:
      - "main"
jobs:
  build_container:
    strategy:
      matrix:
        job:
          - dir: "./argocd-image-updater"
            container-image: "argocd-image-updater"
            scan: "true"
          - dir: "./bird"
            container-image: "bird"
            scan: "true"
          - dir: "./bpf-map-pressure-exporter"
            container-image: "bpf-map-pressure-exporter"
            scan: "true"
            make_test: true
          - dir: "./chrony"
            container-image: "chrony"
            scan: "true"
          - dir: "./contour"
            container-image: "contour"
            scan: "true"
          - dir: "./coredns"
            container-image: "coredns"
            scan: "true"
          - dir: "./etcd"
            container-image: "etcd"
            scan: "true"
          - dir: "./external-dns"
            container-image: "external-dns"
            scan: "true"
          - dir: "./fluent-bit"
            container-image: "fluent-bit"
            scan: "true"
          - dir: "./golang-all/golang-1.20-focal"
            container-image: "golang"
            enable_arm64: true
            scan: "true"
          - dir: "./golang-all/golang-1.20-jammy"
            container-image: "golang"
            enable_arm64: true
            scan: "true"
          - dir: "./golang-all/golang-1.21-focal"
            container-image: "golang"
            enable_arm64: true
            scan: "true"
          - dir: "./golang-all/golang-1.21-jammy"
            container-image: "golang"
            enable_arm64: true
            scan: "true"
          - dir: "./haproxy"
            container-image: "haproxy"
            scan: "true"
          - dir: "./pause"
            container-image: "pause"
          - dir: "./kubernetes"
            container-image: "kubernetes"
            scan: "true"
          - dir: "./pod-delete-rate-limiter"
            container-image: "pod-delete-rate-limiter"
            make_test: true
          - dir: "./sealed-secrets"
            container-image: "sealed-secrets"
            scan: "true"
          - dir: "./serf"
            container-image: "serf"
            scan: "true"
          - dir: "./trust-manager"
            container-image: "trust-manager"
          - dir: "./trust-packages"
            container-image: "trust-packages"
          - dir: "./stakater-reloader"
            container-image: "stakater-reloader"
          - dir: "./spegel"
            container-image: "spegel"
          - dir: "./squid"
            container-image: "squid"
            scan: "true"
          - dir: "./unbound"
            container-image: "unbound"
            scan: "true"
          - dir: "./unbound_exporter"
            container-image: "unbound_exporter"
          - dir: "./vault"
            container-image: "vault"
            scan: "true"

    runs-on: ubuntu-22.04
    env:
      go-version: "1.21"
    steps:
      - uses: actions/checkout@v4
      - name: Setup build environment
        uses: ./.github/actions/setup
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          go-version: ${{ env.go-version }}
      - name: Build container image
        uses: ./.github/actions/build_push
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          yamory_token: ${{ secrets.YAMORY_ACCESS_TOKEN }}
          dir: ${{ matrix.job.dir }}
          container-image: ${{ matrix.job.container-image }}
          enable_arm64: ${{ matrix.job.enable_arm64 }}
          make_test: ${{ matrix.job.make_test }}
          scan: ${{ matrix.job.scan }}
