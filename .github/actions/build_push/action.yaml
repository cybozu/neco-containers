name: "Build and push"
description: "build and push container image"

inputs:
  dir:
    description: "working direcotry"
    required: false
    default: ""
  container-image:
    description: "container image"
    required: true
  github_token:
    description: "GitHub Token"
    required: true
  yamory_token:
    description: "Yamory Access Token"
    required: true
  enable_arm64:
    description: "Add arm64 to container image platform"
    required: false
    default: "false"
  make-targets:
    description: "make targets before building docker image"
    required: false
    default: ""
  request-scan:
    description: "Request image scanning (true, false, or auto)"
    required: false
    default: "auto"
  target:
    description: "Target stage to build"
    required: false
    default: ""

runs:
  using: "composite"
  steps:
    - name: Checkout
      uses: actions/checkout@v4
    - id: prepare
      name: Prepare build parameters
      uses: ./.github/actions/prepare_build_params
      with:
        dir: ${{ inputs.dir }}
        container-image: ${{ inputs.container-image }}
        target: ${{ inputs.target }}
        request-scan: ${{ inputs.request-scan }}
        github_token: ${{ inputs.github_token }}
    - name: Set container build platform
      if: ${{ steps.prepare.outputs.build }}
      shell: bash
      run: |
        enable_arm64=${{ inputs.enable_arm64 }}
        if [ "$enable_arm64" = "true" ]; then
          echo "PLATFORM=linux/amd64,linux/arm64" >> $GITHUB_ENV
        else
          echo "PLATFORM=linux/amd64" >> $GITHUB_ENV
        fi
    - name: Make targets
      if: ${{ inputs.make-targets != '' && steps.prepare.outputs.build }}
      shell: bash
      run: |
        for i in ${{ inputs.make-targets }}; do
          echo "Executing make $i..."
          make -C ${{ inputs.dir }} $i
        done
    - name: Build and push
      if: ${{ steps.prepare.outputs.build }}
      uses: docker/build-push-action@v5
      with:
        context: ${{ inputs.dir }}
        platforms: ${{ env.PLATFORM }}
        provenance: false
        push: ${{ steps.prepare.outputs.docker_push }}
        tags: |
          ${{ steps.prepare.outputs.tag }}
          ${{ steps.prepare.outputs.branch }}
        target: ${{ inputs.target }}
    - name: Scan images
      if: ${{ steps.prepare.outputs.scan }}
      uses: ./.github/actions/trivy_scan
      with:
        dir: ${{ inputs.dir }}
        container-image: ${{ inputs.container-image }}
        tag: ${{ steps.prepare.outputs.tag }}
        yamory_token: ${{ inputs.yamory_token }}
