name: "Build Envoy"
description: "Build Envoy"
inputs:
  clang_archive_path:
    description: "clang archive path"
    required: true
  github_token:
    description: "GitHub Token"
    required: true
  yamory_token:
    description: "Yamory Access Token"
    required: true

runs:
  using: "composite"
  steps:
    - name: Setup build environment
      uses: ./.github/actions/setup
      with:
        github_token: ${{ inputs.github_token }}
        go-version-file: "./envoy/go.mod"
    - id: prepare
      name: Prepare build parameters
      uses: ./.github/actions/prepare_build_params
      with:
        container-image: envoy
        github_token: ${{ inputs.github_token }}
    - name: Prepare VERSION
      shell: bash
      run: |
        TAG=$(cat ./envoy/TAG)
        VERSION=$(echo $TAG | cut -d \. -f 1,2,3)
        echo "VERSION=${VERSION}" >> $GITHUB_ENV
    - name: Test
      if: ${{ steps.prepare.outputs.build }}
      shell: bash
      working-directory: envoy
      run: make setup test
    - name: Build
      if: ${{ steps.prepare.outputs.build }}
      shell: bash
      working-directory: envoy
      run: |
        # Instruction: Building Envoy with Bazel
        # https://github.com/envoyproxy/envoy/blob/main/bazel/README.md
        #
        # Default runner includes bazelisk by default.
        # Appropriate bazel version is decided from `.bazelversion`.
        # https://github.com/bazelbuild/setup-bazelisk
        # https://github.com/envoyproxy/envoy/blob/main/.bazelversion
        mkdir -p src
        cd src

        # Extract clang+llvm
        # Please update the archive path if supported compiler version is upgraded
        # https://github.com/envoyproxy/envoy/blob/main/bazel/README.md#supported-compiler-versions
        curl -o /tmp/clang.tar.xz -sLf ${{ inputs.clang_archive_path }}
        mkdir llvm
        tar -C llvm --strip-components=1 --no-same-owner -xf /tmp/clang.tar.xz

        # Clone Envoy repository
        git clone --depth 1 --branch v${{ env.VERSION }} https://github.com/envoyproxy/envoy
        cd envoy
        bazel/setup_clang.sh $(pwd)/../llvm
        echo "build --config=clang" >> user.bazelrc
        # https://github.com/cybozu/neco-containers/pull/1119
        sed -i s/envoy_dependencies_extra\(\)/envoy_dependencies_extra\(ignore_root_user_error=True\)/ WORKSPACE

        # Check Bazel version
        # e.g. bazel x.y.z
        if [ "$(bazel --version | cut -d' ' -f2)" != "$(cat .bazelversion)" ]; then
            echo "Wrong bazel version detected"
            exit 1
        fi

        # Compile Envoy
        # https://github.com/envoyproxy/envoy/blob/main/bazel/README.md#release-builds
        bazel --bazelrc=/dev/null build --jobs=auto -c opt //source/exe:envoy-static.stripped --config=libc++
    - name: Move files
      if: ${{ steps.prepare.outputs.build }}
      shell: bash
      working-directory: envoy
      run: |
        mkdir -p workspace
        mv src/envoy/bazel-bin/source/exe/envoy-static.stripped workspace/envoy
        mv src/envoy/LICENSE workspace/
        mv src/envoy/distribution/docker/docker-entrypoint.sh workspace/
    - name: Build and push
      if: ${{ steps.prepare.outputs.build }}
      uses: docker/build-push-action@v6
      with:
        context: envoy
        platforms: "linux/amd64"
        provenance: false
        push: ${{ steps.prepare.outputs.docker_push }}
        # Input comma-separated tags: <tag>,<branch1>,<branch2>,...
        tags: ${{ steps.prepare.outputs.tag }}${{ steps.prepare.outputs.branch && format(',{0}', steps.prepare.outputs.branch) }}
        load: true
    - name: Scan images
      if: ${{ steps.prepare.outputs.scan }}
      uses: ./.github/actions/trivy_scan
      with:
        dir: ${{ inputs.dir }}
        container-image: ${{ inputs.container-image }}
        tag: ${{ steps.prepare.outputs.tag }}
        yamory_token: ${{ inputs.yamory_token }}
    - name: Test image
      if: ${{ steps.prepare.outputs.build }}
      shell: bash
      run: docker run --rm ${{ steps.prepare.outputs.tag }} envoy --version
