diff --git a/lib/promscrape/scrapework.go b/lib/promscrape/scrapework.go
index 1c98dec01..21b5d2784 100644
--- a/lib/promscrape/scrapework.go
+++ b/lib/promscrape/scrapework.go
@@ -504,6 +504,7 @@ func (sw *scrapeWork) processDataOneShot(scrapeTimestamp, realTimestamp int64, b
 		samplesPostRelabeling:     samplesPostRelabeling,
 		seriesAdded:               seriesAdded,
 		seriesLimitSamplesDropped: samplesDropped,
+		bodySize:                  len(bodyString),
 	}
 	sw.addAutoMetrics(am, wc, scrapeTimestamp)
 	sw.pushData(sw.Config.AuthToken, &wc.writeRequest)
@@ -584,6 +585,7 @@ func (sw *scrapeWork) processDataInStreamMode(scrapeTimestamp, realTimestamp int
 		samplesPostRelabeling:     samplesPostRelabeling,
 		seriesAdded:               seriesAdded,
 		seriesLimitSamplesDropped: samplesDropped,
+		bodySize:                  len(bodyString),
 	}
 	sw.addAutoMetrics(am, wc, scrapeTimestamp)
 	sw.pushData(sw.Config.AuthToken, &wc.writeRequest)
@@ -817,12 +819,14 @@ type autoMetrics struct {
 	samplesPostRelabeling     int
 	seriesAdded               int
 	seriesLimitSamplesDropped int
+	bodySize                  int
 }
 
 func isAutoMetric(s string) bool {
 	switch s {
 	case "up", "scrape_duration_seconds", "scrape_samples_scraped",
 		"scrape_samples_post_metric_relabeling", "scrape_series_added",
+		"scrape_body_size_bytes",
 		"scrape_timeout_seconds", "scrape_samples_limit",
 		"scrape_series_limit_samples_dropped", "scrape_series_limit",
 		"scrape_series_current":
@@ -837,6 +841,7 @@ func (sw *scrapeWork) addAutoMetrics(am *autoMetrics, wc *writeRequestCtx, times
 	sw.addAutoTimeseries(wc, "scrape_samples_scraped", float64(am.samplesScraped), timestamp)
 	sw.addAutoTimeseries(wc, "scrape_samples_post_metric_relabeling", float64(am.samplesPostRelabeling), timestamp)
 	sw.addAutoTimeseries(wc, "scrape_series_added", float64(am.seriesAdded), timestamp)
+	sw.addAutoTimeseries(wc, "scrape_body_size_bytes", float64(am.bodySize), timestamp)
 	sw.addAutoTimeseries(wc, "scrape_timeout_seconds", sw.Config.ScrapeTimeout.Seconds(), timestamp)
 	if sampleLimit := sw.Config.SampleLimit; sampleLimit > 0 {
 		// Expose scrape_samples_limit metric if sample_limit config is set for the target.
